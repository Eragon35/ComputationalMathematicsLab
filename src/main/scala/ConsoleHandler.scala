package main.scala

import Main.{matrix, triangleMatrix}

object ConsoleHandler {

  val help: String = """1 –ß—Ç–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã –∏–∑ —Ñ–∞–π–ª–∞
               |2 –í–≤–æ–¥ –º–∞—Ç—Ä–∏—Ü—ã –≤—Ä—É—á–Ω—É—é
               |3 –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—è
               |4 –í—ã–≤–æ–¥ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã (–≤–∫–ª—é—á–∞—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü –í)
               |5 –í—ã–≤–æ–¥ –≤–µ–∫—Ç–æ—Ä–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö: ùë•1,ùë•2,‚Ä¶,ùë•ùëõ
               |6 –í—ã–≤–æ–¥ –≤–µ–∫—Ç–æ—Ä–∞ –Ω–µ–≤—è–∑–æ–∫: ùëü1,ùëü,‚Ä¶,ùëüùëõ""".stripMargin

  def handler(line: String): Unit = {
    line.trim match {
      case "1" => ReadFromFile.readMatrix("filename")
      case "2" => ReadFromConsole.readMatrix()
      case "3" => //println(Gauss.det(matrix))
      case "4" => triangleMatrix.foreach(a => {
        a.foreach(n => print(n + " "))
        println()
      })
      case "5" => //show vector of x
      case "6" => //show some bullshit
      case "exit" => sys.exit ()
      case "show" => matrix.foreach(a => {
        a.foreach(n => print(n + " "))
        println()
      })
      case _ => println ("–ö–∞–∫–æ–π-—Ç–æ —Ç—ã —Å—Ç—Ä–∞–Ω–Ω—ã–π, –Ω–µ –±—É–¥—É —Å —Ç–æ–±–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å")
      sys.exit ()
    }


  }

}
